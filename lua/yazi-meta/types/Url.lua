--- @meta Url

--- @see https://yazi-rs.github.io/docs/plugins/types#shared.url
---
--- example:
--- ```lua
--- -- regular file
--- local url = Url("/root/Downloads/logo.png")
---
--- -- `bgm.mp3` from the archive `ost.zip`
--- local url = Url("archive:///root/ost.zip#bgm.mp3")
--- ```
--- @class (exact) yazi.Url
--- @operator concat(string):yazi.Url Concat the Url with the another Url
--- @overload fun(path: string):yazi.Url Create a Url
---
--- Properties:
--- @field frag string The fragment string of the url. Let's say the url archive:///root/my-archive.zip#1.jpg, the fragment 1.jpg
--- @field is_regular boolean Whether the file represented by the url is a regular file
--- @field is_search boolean Whether the file represented by the url from the search result
--- @field is_archive boolean Whether the file represented by the url from an archive
--- @field is_absolute boolean Whether the path represented by the url is absolute
--- @field has_root boolean  Whether the path represented by the url has a root
---
--- Methods:
--- @field name fun():string? Returns the filename in string if any, otherwise nil
--- @field stem fun():string? Returns the filename without the extension in string if any, otherwise nil
--- @field join fun(url: yazi.Url):yazi.Url Joins with another Url or a string of url, returns a new Url
--- @field parent fun():yazi.Url? Returns parent directory Url if any, otherwise nil
--- @field starts_with fun(url: yazi.Url):boolean Whether the url starts with another Url or a string of url
--- @field ends_with fun(url: yazi.Url):boolean Whether the url ends with another Url or a string of url
--- @field strip_prefix fun(url):yazi.Url Strips the prefix of another Url or a string of url, returns a new Url
---
--- MetaMethods:
--- @metamethod __eq(another_url)
--- @metamethod __tostring()
--- @metamethod __concat(string)
